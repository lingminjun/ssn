#pragma      PACK
#version     2
#module MPCSC 1
#include     "mpcsc_cmd.itf"
#include     "mpcsstrc.itf"

pack MPCS_REQ_CREATEROOM
{
    string                 room_name;
    vector<room_user_info> contact_list;
}

pack MPCS_RSP_CREATEROOM
{
    uint8_t            retcode;
    string             room_id;
    room_info          info;
    string		retMsg;
}

pack MPCS_NTF_CREATEROOM
{
    string             room_id;
    string             creater;
    room_info          info;
}

pack MPCS_REQ_INVITEROOM
{
    string                 room_id;
    vector<room_user_info> user_ids;
    string                 remark;
}

pack MPCS_RSP_INVITEROOM
{
    uint8_t                retcode;
    string                 room_id;
    vector<room_user_info> user_ids;
    int64_t                member_times;
    string		retMsg;
}

pack MPCS_REQ_JOINROOM
{
    string             room_id;
    string             inviter;
    string             password;
}

pack MPCS_RSP_JOINROOM
{
    uint8_t            retcode;
    string             room_id;
    int64_t            member_times;
    vector<string>     member_list;
    string		retMsg;
}

pack MPCS_REQ_EXITROOM
{
    string             room_id;
}

pack MPCS_RSP_EXITROOM
{
    uint8_t            retcode;
    string             room_id;
}

pack MPCS_REQ_GETROOMINFO
{
    string             room_id;
    int64_t            msg_times;
    int64_t            member_times;
}

pack MPCS_RSP_GETROOMINFO
{
    uint8_t            retcode;
    string             room_id;
    room_info          info;
}

pack MPCS_REQ_SEND_MSG
{
    string             room_id;
    uint8_t            msg_type;
    bytes              message;
    string             target_id = "";
    int64_t            msg_id;
}

pack MPCS_RSP_SEND_MSG
{
    uint8_t            retcode;
    string             room_id;
    int64_t            send_time;
    int64_t            msg_times = 0;
}

pack MPCS_NTF_MESSAGE
{
    string             room_id;
    string             from_id;
    uint8_t            msg_type;
}

pack MPCS_NTF_USERSTS
{
    string             room_id;
    string             from_id;
    string             nick_name;
    string             inviter;
    uint8_t            type;
    int64_t            member_times;
    string             remark;
}

pack MPCS_REQ_OFFMSG_COUNT
{
    vector<mpcs_offmsg_times>  room_list;
}

pack MPCS_RSP_OFFMSG_COUNT
{
    vector<mpcs_offmsg_count>  offmsg_counts;
}

pack MPCS_REQ_ROOMIDLIST
{
}


pack MPCS_RSP_ROOMIDLIST
{
     vector<string> rooms_id;
}
